FORMAT: 1A
HOST: https://api-server.dev

# carwash

API for mobile app to allow users to purchase and gift car washes.

## Locations [/locations]

Car wash locations for the apps owner.

### List all locations [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1,
                    "street": "1026 Hamilton Dr",
                    "city": "Holland",
                    "state": "OH",
                    "zip": "43528",
                    "phone": "4198674858",
                    "latitude": 41.6215264,
                    "longitude": -83.6999915,
                }
            ]

## Location [/locations/{location_id}]

### Get location [GET]

+ Parameters
  + location_id: 1 (required, number) - ID of the Location

+ Response 200 (application/json)

    + Body

              {
                  "id": 1,
                  "street": "1026 Hamilton Dr",
                  "city": "Holland",
                  "state": "OH",
                  "zip": "43528",
                  "phone": "4198674858",
                  "latitude": 41.6215264,
                  "longitude": -83.6999915,
              }

## Products [/products]

Purchasable items available from any of owners car washes. Available at least one of location, but not necessarily all locations.

### Get a list of all purchasable products across all locations [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1,
                    "price": 15.00,
                    "name": "Ultimate Wash",
                    "descriptions": [
                      { 
                        "description": "Wash"
                      },
                      { 
                        "description": "Under Carriage Blast"
                      },
                      { 
                        "description": "Turbo Dry"
                      },
                    ]
                }
            ]

## Products [/locations/{location_id}/products]

Purchasable items available from this particular location. Available at least one of location, but not necessarily all locations.

### Get a list of purchasable products for a location [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1,
                    "price": 15.00,
                    "name": "Ultimate Wash",
                    "descriptions": [
                      { 
                        "description": "Wash"
                      },
                      { 
                        "description": "Under Carriage Blast"
                      },
                      { 
                        "description": "Turbo Dry"
                      },
                    ]
                }
            ]


## Product [/products/{product_id}]

### Get product [GET]

+ Parameters
  + product_id: 1 (required, number) - ID of the product

+ Response 200 (application/json)

    + Body

            {
                    "id": 1,
                    "price": 15.00,
                    "name": "Ultimate Wash",
                    "descriptions": [
                      { 
                        "description": "Wash"
                      },
                      { 
                        "description": "Under Carriage Blast"
                      },
                      { 
                        "description": "Turbo Dry"
                      },
                    ]
            }
        
## Users [/users]

User of the app. Can purchase car washes and redeem coupons.

### Create a user [POST]

Returns an authentication token which will be used to identify this user going forward.

+ Request (application/json)

        {
          "first_name": "string",
          "last_name": "string",
          "email_address": "string",
          "password": "string",
        }

+ Response 201 (application/json)

    + Body
    
            {
                "first_name": "Sean",
                "last_name": "Temple",
                "email_address": "stemple@chepri.com",
                "auth_token": "65wa6MVCAHiSGv3ilmrSTlk5L20l6nCQ",
            }

## User [/users/{auth_token}]

+ Parameters
    + auth_token (string) - token representing an authenticated user.

### Verify user token [GET]

+ Response 200 (application/json)

        {
            "first_name": "Sean",
            "last_name": "Temple",
            "email_address": "stemple@chepri.com",
            "auth_token": "65wa6MVCAHiSGv3ilmrSTlk5L20l6nCQ",
        }

### Expire user token [DELETE]

+ Response 204

## User Rewards [/users/{auth_token}/rewards]

Product or Coupons that the user has purchased or claimed.

### List [GET]

+ Response 200 (application/json)

    + Body

            [
                  {
                      "name": "Ultimate Wash",
                      "code": 012345678,
                      "expires_on": "",
                      "redeemed_at": "",
                  },
                  {
                      "name": "Premium Wash",
                      "code": 123456789,
                      "expires_on": "2017-04-01",
                      "redeemed_at": "2017-01-20T08:40:51.620Z",
                  },
                  {
                      "name": "$2 off any wash",
                      "code": 123456789,
                      "expires_on": "2017-04-01",
                      "redeemed_at": "2017-01-03T08:40:51.620Z",
                  }
            ]

## Forgot Password [/user/forgot_password]

Request a password reset that will allow the user to change there 

### Create a forgot password request [POST]

+ Request (application/json)

        {
            "email_address": "string",
        }

+ Response 204

## User Deals [/users/{auth_token}/deals]

Deals available for the user to claim at any of the owners car washes. User is required to filter out claimed ones.

### List Deals [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                  "id": 1
                  "name": "$2 off any wash",
                  "description": "Claim this and get $2 off your next wash!",
                  "code": 123456789,
                  "expires_on": "2017-03-01",
                },
                {
                  "id": 2
                  "name": "Free add-on",
                  "description": "Buy any wash and get a free add-on!",
                  "code": 123456789,
                  "expires_on": "2017-04-01",
                }
            ]

## User Deals [/users/{auth_token}/locations/{location_id}/deals]

Deals available for the user to claim at a particular location. User is required to filter out claimed ones.

### List User Deails for a location [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                  "id": 1
                  "name": "$2 off any wash",
                  "description": "Claim this and get $2 off your next wash!",
                  "code": 123456789,
                  "expires_on": "2017-03-01",
                },
                {
                  "id": 2
                  "name": "Free add-on",
                  "description": "Buy any wash and get a free add-on!",
                  "code": 123456789,
                  "expires_on": "2017-04-01",
                }
            ]

## User Deal [/users/{auth_token}/deals/{deal_id}]
loc
### Get deal [GET]

+ Parameters
  + auth_token: 65wa6MVCAHiSGv3ilmrSTlk5L20l6nCQ (required, string) - 
  + deal_id: 1 (required, number) - ID of the deal

+ Response 200 (application/json)

    + Body

            {
                "id": 1
                "name": "$2 off any wash",
                "description": "Claim this and get $2 off your next wash!",
                "code": 123456791,
                "expires_on": "2017-03-01",
            }
            
## Credit Cards [/cards/{auth_token}]

+ Parameters
  + auth_token: 65wa6MVCAHiSGv3ilmrSTlk5L20l6nCQ (required, string)

### Get list of cards [GET] 

Get the list of all the user's saved credit cards.

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1
                    "processor": "E-xact",
                    "type": "Visa",
                    "masked_number": "...1234",
                    "exp_month": 10,
                    "exp_year": 20,
                    "token":  "abcdefg",
                    "auth_number": "A12345"
                },
                {
                    "id": 2
                    "processor": "PaymentExpress",
                    "type": "MasterCard",
                    "masked_number": "...1234",
                    "exp_month": 10,
                    "exp_year": 20,
                    "token":  "abcdefg"
                }
            ]
            
### Add new card [POST]

Save a new credit card to the users account and return the updated list of cards.

+ Request (application/json)

    + Body

            [
                {
                    "processor": "E-xact",
                    "type": "Visa",
                    "masked_number": "...1234",
                    "exp_month": 10,
                    "exp_year": 20,
                    "token":  "abcdefg",
                    "auth_number": "A12345"
                }
            ]
   
+ Response 201 (application/json)

    + Body

            [
                {
                    "id": 1
                    "processor": "E-xact",
                    "type": "Visa",
                    "masked_number": "...1234",
                    "exp_month": 10,
                    "exp_year": 20,
                    "token":  "abcdefg",
                    "auth_number": "A12345"
                },
                {
                    "id": 2
                    "processor": "PaymentExpress",
                    "type": "MasterCard",
                    "masked_number": "...1234",
                    "exp_month": 10,
                    "exp_year": 20,
                    "token":  "abcdefg"
                }
            ]

### Delete a card [DELETE /cards/{auth_token}/{card_id}]

Delete a saved card from the users account and return the updated list of cards.

+ Parameters
   + card_id: 1 (required, number) 
   
+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1
                    "processor": "E-xact",
                    "type": "Visa",
                    "masked_number": "...1234",
                    "exp_month": 10,
                    "exp_year": 20,
                    "token":  "abcdefg",
                    "auth_number": "A12345"
                },
                {
                    "id": 2
                    "processor": "PaymentExpress",
                    "type": "MasterCard",
                    "masked_number": "...1234",
                    "exp_month": 10,
                    "exp_year": 20,
                    "token":  "abcdefg"
                }
            ]