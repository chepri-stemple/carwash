FORMAT: 1A
HOST: https://api-server.dev

# carwash

API for mobile app to allow users to purchase and gift car washes.

## Locations [/locations]

Car wash locations for the apps owner.

### Get All Locations [GET]

+ Request

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
            
+ Response 200 (application/json)

    + Body
    
            [
                {
                    "id": 123456789,
                    "address1": "1026 Hamilton Dr",
                    "address2": "",
                    "city": "Holland",
                    "state": "OH",
                    "zip": "43528",
                    "phone": "4198674858",
                    "descriptions": [
                        { 
                            "description": "Full service location!"
                        },
                        { 
                            "description": "Hours:"
                        },
                        { 
                            "description": "Mon - Sun: 8AM to 8PM"
                        }
                    ]
                },
            ]

### Get Location [GET /locations/{location_id}]

+ Parameters
    + location_id: 123456789 (number, required) - ID of the Location

+ Request 

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954

+ Response 200 (application/json)

    + Body
    
            {
                "id": 123456789,
                "address1": "1026 Hamilton Dr",
                "address2": "",
                "city": "Holland",
                "state": "OH",
                "zip": "43528",
                "phone": "4198674858",
                    "descriptions": [
                        { 
                            "description": "1026 Hamilton Dr"
                        },
                        { 
                            "description": "Hours:"
                        },
                        { 
                            "description": "Mon - Sun: 8AM to 8PM"
                        }
                    ]
            }


## Products [/products]

Purchasable items available from any of owners car washes. Available at least one of location, but not necessarily all locations.

### Get All Products [GET]

Get a list all products for all locations.

+ Request

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954


+ Response 200 (application/json)

        
   + Body

            [
                {
                    "id": 1,
                    "price": 15.00,
                    "name": "Ultimate Wash",
                    "locations": [123456789, 111222333, 666777888]
                    "descriptions": 
                    [
                        { 
                            "description": "Wash"
                        },
                        { 
                            "description": "Under Carriage Blast"
                        },
                        { 
                            "description": "Turbo Dry"
                        }
                    ]
                },
                {
                    "id": 2,
                    "price": 13.00,
                    "name": "Premium Wash",
                    "locations": [123456789, 111222333, 666777888]
                    "descriptions": 
                    [
                        { 
                            "description": "Wash"
                        },
                        { 
                            "description": "Wax"
                        }
                    ]
                }
            ]

### Get Product [GET /products/{product_id}]

Get a specific product by product ID.

+ Parameters
    + product_id: 1 (number, required) - ID of the product

+ Request

     + Header
     
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954

+ Response 200 (application/json)

    + Body
    
            {
                "id": 1,
                "price": 15.00,
                "name": "Ultimate Wash",
                "locations": [123456789, 111222333, 666777888]
                "descriptions": 
                [
                    { 
                        "description": "Wash"
                    },
                    { 
                        "description": "Under Carriage Blast"
                    },
                    { 
                        "description": "Turbo Dry"
                    }
                ]
            }

### Get All Location Products[GET /products/location/{location_id}]

Get a list of all products avaiable at a specific location.

+ Parameters
    + location_id: 123456789 (number, required) - ID of the Location

+ Request

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954


+ Response 200 (application/json)

    + Body
    
            [
                {
                    "id": 1,
                    "price": 15.00,
                    "name": "Ultimate Wash",
                    "locations": [123456789, 111222333, 666777888]
                    "descriptions": 
                    [
                        { 
                            "description": "Wash"
                        },
                        { 
                            "description": "Under Carriage Blast"
                        },
                        { 
                            "description": "Turbo Dry"
                        }
                    ]
                },
                {
                    "id": 2,
                    "price": 13.00,
                    "name": "Premium Wash",
                    "locations": [123456789, 111222333, 666777888]
                    "descriptions": 
                    [
                        { 
                            "description": "Wash"
                        },
                        { 
                            "description": "Wax"
                        }
                    ]
                }
            ]


## Users [/users]

User of the app. Can purchase car washes and redeem coupons.

### Create User [POST]

Returns an authentication token which will be used to identify this user going forward.

+ Request (application/json)
    
    + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
    
    + Body

            {
              "first_name": "string",
              "last_name": "string",
              "email_address": "string",
              "password": "string",
            }

+ Response 201 (application/json)

        {
            "first_name": "Sean",
            "last_name": "Temple",
            "email_address": "stemple@chepri.com",
            "auth_token": "65wa6MVCAHiSGv3ilmrSTlk5L20l6nCQ",
        }

### Log In [POST /users/login]

Log in if the auth token is expired or invalid

+ Request (application/json)

    + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
    
    + Body
    
            {
                "email_address": "string",
                "password": "string",
            }

+ Response 200

        {
            "first_name": "Sean",
            "last_name": "Temple",
            "email_address": "stemple@chepri.com",
            "auth_token": "65wa6MVCAHiSGv3ilmrSTlk5L20l6nCQ",
        }

### Request Password Reset [POST /users/forgot_password]

Request a password reset that will allow the user to change there 

+ Request (application/json)

    + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
    
    + Body
    
            {
                "email_address": "string",
            }

+ Response 204

### Verify Password Reset Code [POST /users/forgot_password/{code}]

Verify the code emailed to the user before allowing the password to be changed. 

+ Parameters
    + code: 123456 (number, required) Password reset verification code.

+ Request (application/json)

    + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
    
    + Body
    
            {
                "email_address": "string",
            }

+ Response 204


##  Authorized Users [/users/{auth_token}]

+ Parameters
    + auth_token (string, required) - token representing an authenticated user.

### Update User [PATCH] 

+ Request (application/json)

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
    
    + Body
    
            {
              "first_name": "string",
              "last_name": "string",
              "email_address": "string",
              "password": "string",
            }

+ Response 200 (application/json)

        {
            "first_name": "Sean",
            "last_name": "Temple",
            "email_address": "stemple@chepri.com",
            "auth_token": "65wa6MVCAHiSGv3ilmrSTlk5L20l6nCQ",
        }

### Verify User Token [GET /users/{auth_token}]

+ Request

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954


+ Response 200 (application/json)

        {
            "first_name": "Sean",
            "last_name": "Temple",
            "email_address": "stemple@chepri.com",
            "auth_token": "65wa6MVCAHiSGv3ilmrSTlk5L20l6nCQ",
        }

### Expire User token [DELETE]

+ Request

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954

+ Response 204

## User Rewards [/users/{auth_token}/rewards]

Product or Coupons that the user has purchased or claimed.

### List [GET]

+ Parameters
    + auth_token (string, required) - token representing an authenticated user.

+ Response 200 (application/json)

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
            
    + Body
    
            { 
                "products": 
                [
                    {
                        "id": 1
                        "name": "Ultimate Wash",
                        "code": 012345678,
                        "purchased_on": "2017-01-13 13:54:23",
                        "expires_on": ""
                        "max_uses": 1,
                        "use_count": 1,
                        "last_used": "2017-01-13 13:56:13"
                        "locations": [123456789, 111222333, 666777888]
                   },
                   {
                        "id": 2
                        "name": "Premium Wash",
                        "code": 123456789,
                        "purchased_on": "2017-01-13 13:54:23",
                        "expires_on": "2017-04-01",
                        "max_uses": 5,
                        "use_count": 1,
                        "last_used": "2017-01-13 13:56:13"
                        "locations": [123456789, 111222333, 666777888]
                    }
                ],
                "deals":
                [
                    {
                        "id": 1
                        "name": "$2 off any wash",
                        "code": 123456789,
                        "claimed_on": "2017-01-13 13:56:13",
                        "expires_on": "2017-04-01",
                        "max_uses": 1,
                        "use_count": 0,
                        "last_used": ""
                        "locations": [123456789, 111222333, 666777888]
                    }
                ]
            }


## User Deals [/users/{auth_token}/deals]

Deals available for the user to claim at any of the owners car washes. User is required to filter out claimed ones.

### List Deals [GET]

+ Parameters
    + auth_token (required, string) - token representing an authenticated user.

+ Response 200 (application/json)

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
            
    + Body
    
            [
                { 
                    "id": 1
                    "name": "$2 off any wash",
                    "description": "Claim this and get $2 off your next wash!",
                    "terms": "May not be conmbined with any other offer."
                    "expires_on": "2017-03-01",
                    "claim_limit": 3,
                    "number_claimed": 2,
                    "locations": [123456789, 111222333, 666777888]
                },
                {
                    "id": 2
                    "name": "$3 off the Ultimate",
                    "description": "Claim this and get $2 off your next wash!",
                    "terms": "May not be conmbined with any other offer."
                    "expires_on": "2017-03-01",
                    "claim_limit": 1,
                    "number_claimed": 0,
                    "locations": [123456789, 111222333]
                }
            ]
            
### List Deails for a Location [GET /users/{auth_token}/deals/locations/{location_id}]

Deals available for the user to claim at a particular location.  User is required to filter out claimed ones.

+ Parameters
    + location_id: 666777888 (number, required) - ID of the Location
    + auth_token (string, required) - token representing an authenticated user.

+ Response 200 (application/json)

     + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954
            
    + Body
    
            [
                { 
                    "id": 1
                    "name": "$2 off any wash",
                    "description": "Clai this and get $2 off your next wash!",
                    "terms": "May not be conmbined with any other offer."
                    "expires_on": "2017-03-01",
                    "claim_limit": 3,
                    "number_claimed": 2,
                    "locations": [123456789, 111222333, 666777888]
                }
            ]

### Claim Deal [POST /users/{auth_token}/deals/{deal_id}]

+ Parameters
    + deal_id: 1 (number, required) The ID of the deal to be claimed.

+ Request 

    + Header
    
            app_key: 71d6ed46ab67aa4602c8c41c64c4b954

+ Response 200

            {
                "id": 1
                "name": "$2 off any wash",
                "code": 123456789,
                "claimed_on": "2017-01-13 13:56:13",
                "expires_on": "2017-04-01",
                "max_uses": 1,
                "use_count": 0,
                "last_used": ""
                "locations": [123456789, 111222333, 666777888]
           }